/*!
 * author: FDD <smileFDD@gmail.com> 
 * ol3-echarts v1.3.3
 * build-time: 2018-2-0 17:33
 * LICENSE: MIT
 * (c) 2017-2018 https://sakitam-fdd.github.io/ol3Echarts
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("echarts"),require("openlayers")):"function"==typeof define&&define.amd?define(["echarts","openlayers"],e):t.ol3Echarts=e(t.echarts,t.ol)}(this,function(t,e){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t,e=e&&e.hasOwnProperty("default")?e.default:e;var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},r=function(t){var e=void 0===t?"undefined":o(t);return null!==t&&("object"===e||"function"===e)},i=function t(e,o){for(var n in o)r(o[n])&&r(e[n])?t(e[n],o[n]):e[n]=o[n];return e},s=function(t){var e;return e=void 0,document&&/^#([\w-]+)$/.test(t)?(e=document.getElementById(RegExp.$1))?[e]:[]:Array.prototype.slice.call(/^\.([\w-]+)$/.test(t)?document.getElementsByClassName(RegExp.$1):/^[\w-]+$/.test(t)?document.getElementsByTagName(t):document.querySelectorAll(t))},a=function(t,e,o){if(t&&e){if(t.map&&t.map===Array.prototype.map)return t.map(e,o);for(var n=[],r=0,i=t.length;r<i;r++)n.push(e.call(o,t[r],r,t));return n}},h=function(t,e){var o=Array.prototype.slice.call(arguments,2);return function(){return t.apply(e,o.concat(Array.prototype.slice.call(arguments)))}},p=function(t){if(!t.UTF8Encoding)return t;var e=t.UTF8Scale;null==e&&(e=1024);for(var o=t.features,n=0;n<o.length;n++)for(var r=o[n].geometry,i=[r.coordinates,r.encodeOffsets],s=i[0],a=i[1],h=0;h<s.length;h++){var p=s[h];if("Polygon"===r.type)s[h]=c(p,a[h],e);else if("MultiPolygon"===r.type)for(var d=0;d<p.length;d++){var u=p[d];p[d]=c(u,a[h][d],e)}}return t.UTF8Encoding=!1,t},c=function(t,e,o){for(var n=[[],e[0],e[1]],r=n[0],i=n[1],s=n[2],a=0;a<t.length;a+=2){var h=t.charCodeAt(a)-64,p=t.charCodeAt(a+1)-64;h=h>>1^-(1&h),p=p>>1^-(1&p),i=h+=i,s=p+=s,r.push([h/o,p/o])}return r};var d=function(o){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=function(){this._mapOffset=[0,0],this.dimensions=["lng","lat"],this.projCode_=this._getProjectionCode()};return r.dimensions=r.prototype.dimensions=["lng","lat"],r.prototype.getZoom=function(){return o.getView().getZoom()},r.prototype.setZoom=function(t){return o.getView().setZoom(t)},r.prototype.getViewRectAfterRoam=function(){return this.getViewRect().clone()},r.prototype.setMapOffset=function(t){this._mapOffset=t},r.prototype.dataToPoint=function(t){t&&Array.isArray(t)&&t.length>0&&(t=t.map(function(t){return"string"==typeof t&&(t=Number(t)),t}));var r=n.source||"EPSG:4326",i=n.destination||this.projCode_,s=o.getPixelFromCoordinate(e.proj.transform(t,r,i)),a=this._mapOffset;return[s[0]-a[0],s[1]-a[1]]},r.prototype._getProjectionCode=function(){return o?o.getView()&&o.getView().getProjection().getCode():"EPSG:3857"},r.prototype.pointToData=function(t){var e=this._mapOffset;return o.getCoordinateFromPixel([t[0]+e[0],t[1]+e[1]])},r.prototype.getViewRect=function(){var e=o.getSize();return new t.graphic.BoundingRect(0,0,e[0],e[1])},r.prototype.getRoamTransform=function(){return t.matrix.create()},r.prototype.prepareCustoms=function(t){var e=this.getViewRect();return{coordSys:{type:"openlayers",x:e.x,y:e.y,width:e.width,height:e.height},api:{coord:h(this.dataToPoint,this),size:h(r.dataToCoordSize,this)}}},r.dataToCoordSize=function(t,e){return e=e||[0,0],a([0,1],function(o){var n=e[o],r=t[o]/2,i=[],s=[];return i[o]=n-r,s[o]=n+r,i[1-o]=s[1-o]=e[1-o],Math.abs(this.dataToPoint(i)[o]-this.dataToPoint(s)[o])},this)},r.create=function(t,e){t.eachSeries(function(t){"openlayers"===t.get("coordinateSystem")&&(t.coordinateSystem=new r(o))})},r},u=Object.freeze({pie:function(t,e,o){return e.center=o.dataToPoint(e.coordinates),e},bar:function(t,e,o){return r(t.grid)&&!Array.isArray(t.grid)?console.log(t):Array.isArray(t.grid)&&(t.grid=t.grid.map(function(e,n){var r=o.dataToPoint(t.series[n].coordinates);return e.left=r[0]-parseFloat(e.width)/2,e.top=r[1]-parseFloat(e.height)/2,e})),e}}),f={forcedRerender:!1,forcedPrecomposeRerender:!1,hideOnZooming:!1,hideOnMoving:!1,hideOnRotating:!1,convertTypes:["pie","line","bar"]},l=function(){function o(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments[2];n(this,o),this.$options=i(f,e),this.$chartOptions=t,this.$chart=null,this.$Map=null,this._isRegistered=!1,this._coordinateSystem=null,r&&this.appendTo(r)}return o.prototype.appendTo=function(t){if(!(t&&t instanceof e.Map))throw new Error("not map object");this.$Map=t,this.$Map.once("postrender",this.render,this),this.$Map.renderSync(),this._unRegisterEvents(),this._registerEvents()},o.prototype.getChartOptions=function(){return this.$chartOptions},o.prototype.setChartOptions=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.$chartOptions=t,this.$Map.once("postrender",this.render,this),this.$Map.renderSync(),this},o.prototype.getMap=function(){return this.$Map},o.prototype._isVisible=function(){return this.$container&&""===this.$container.style.display},o.prototype.show=function(){this.$container&&(this.$container.style.display="")},o.prototype.hide=function(){this.$container&&(this.$container.style.display="none")},o.prototype.remove=function(){this.$chart.clear(),this.$chart.dispose(),this._unRegisterEvents(),delete this.$chart,delete this.$Map,this.$container.parentNode.removeChild(this.$container)},o.prototype.clear=function(){this.$chart.clear()},o.prototype.showLoading=function(){this.$chart&&this.$chart.showLoading()},o.prototype.hideLoading=function(){this.$chart&&this.$chart.hideLoading()},o.prototype._createLayerContainer=function(t,e){var o=this.$container=document.createElement("div");o.style.position="absolute",o.style.top=0,o.style.left=0,o.style.right=0,o.style.bottom=0;var n=s(e.target);if(n&&n[0]&&n[0]instanceof Element)n[0].appendChild(o);else{var r=s(".ol-overlaycontainer");r&&r[0]&&r[0]instanceof Element?r[0].appendChild(o):t.getViewport().appendChild(o)}},o.prototype._resizeContainer=function(){var t=this.getMap().getSize();this.$container.style.height=t[1]+"px",this.$container.style.width=t[0]+"px"},o.prototype._clearAndRedraw=function(){!this.$chart||this.$container&&"none"===this.$container.style.display||(this.$options.forcedRerender&&this.$chart.clear(),this.$chart.resize(),this.$chartOptions&&(this._registerMap(),this.$chart.setOption(this.reConverData(this.$chartOptions),!1)))},o.prototype.onResize=function(){this._resizeContainer(),this._clearAndRedraw()},o.prototype.onZoomEnd=function(){this.$options.hideOnZooming&&this.show(),this._clearAndRedraw()},o.prototype.onDragRotateEnd=function(){this.$options.hideOnRotating&&this.show(),this._clearAndRedraw()},o.prototype.onMoveStart=function(){this.$options.hideOnMoving&&this.hide()},o.prototype.onMoveEnd=function(){this.$options.hideOnMoving&&this.show(),this._clearAndRedraw()},o.prototype.onCenterChange=function(t){this._clearAndRedraw()},o.prototype._registerEvents=function(){var t=this.$Map,e=t.getView();this.$options.forcedPrecomposeRerender&&t.on("precompose",this.reRender,this),t.on("change:size",this.onResize,this),e.on("change:resolution",this.onZoomEnd,this),e.on("change:center",this.onCenterChange,this),e.on("change:rotation",this.onDragRotateEnd,this),t.on("movestart",this.onMoveStart,this),t.on("moveend",this.onMoveEnd,this)},o.prototype._unRegisterEvents=function(){var t=this.$Map,e=t.getView();t.un("change:size",this.onResize,this),this.$options.forcedPrecomposeRerender&&t.un("precompose",this.reRender,this),e.un("change:resolution",this.onZoomEnd,this),e.un("change:center",this.onCenterChange,this),e.un("change:rotation",this.onDragRotateEnd,this),t.un("movestart",this.onMoveStart,this),t.un("moveend",this.onMoveEnd,this)},o.prototype._registerMap=function(){this._isRegistered||(t.registerCoordinateSystem("openlayers",d(this.getMap(),this.$options)),this._isRegistered=!0);var e=this.$chartOptions.series;if(e&&r(e))for(var o=e.length-1;o>=0;o--)this.$options.convertTypes.indexOf(e[o].type)>-1||(e[o].coordinateSystem="openlayers"),e[o].animation=!1},o.prototype.reConverData=function(t){var e=t.series;if(e&&e.length>0){if(!this._coordinateSystem){var o=d(this.getMap(),this.$options);this._coordinateSystem=new o}if(e&&r(e))for(var n=e.length-1;n>=0;n--)this.$options.convertTypes.indexOf(e[n].type)>-1&&e[n]&&e[n].hasOwnProperty("coordinates")&&(e[n]=u[e[n].type](t,e[n],this._coordinateSystem))}return t},o.prototype.render=function(){this.$container||(this._createLayerContainer(this.$Map,this.$options),this._resizeContainer()),this.$chart?this._isVisible()&&(this.$chart.resize(),this.reRender()):(this.$chart=t.init(this.$container),this.$chartOptions&&(this._registerMap(),this.$chart.setOption(this.reConverData(this.$chartOptions),!1)))},o.prototype.reRender=function(){this._clearAndRedraw()},o}();return l.getTarget=s,l.merge=i,l.map=a,l.bind=h,l.formatGeoJSON=function(e){var o=p(e);return{type:"FeatureCollection",crs:{},features:t.util.map(t.util.filter(o.features,function(t){return t.geometry&&t.properties&&t.geometry.coordinates.length>0}),function(e){var o=e.properties,n=e.geometry,r=n.coordinates,i=[];return"Polygon"===n.type&&i.push(r[0]),"MultiPolygon"===n.type&&t.util.each(r,function(t){t[0]&&i.push(t[0])}),{type:"Feature",geometry:{type:"Polygon",coordinates:i},properties:o}})}},l});