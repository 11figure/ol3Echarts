{"version":3,"file":"ol3Echarts.js","sources":["../src/helper.js","../src/RegisterCoordinateSystem.js","../src/index.js"],"sourcesContent":["/**\n * Created by FDD on 2017/11/28.\n * @desc helper\n */\n\n/**\n * 判断是否为对象\n * @param value\n * @returns {boolean}\n */\nconst isObject = value => {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\n/**\n * merge\n * @param a\n * @param b\n * @returns {*}\n */\nconst merge = (a, b) => {\n  for (let key in b) {\n    /* istanbul ignore else */\n    if (!a.hasOwnProperty(key)) {\n      a[key] = b[key]\n    } else if (isObject(b[key]) && isObject(a[key])) {\n      merge(a[key], b[key])\n    }\n  }\n  return a\n}\n\n/**\n * get parent container\n * @param selector\n */\nconst getTarget = (selector) => {\n  let dom = (function () {\n    let found\n    return (document && /^#([\\w-]+)$/.test(selector))\n      ? ((found = document.getElementById(RegExp.$1)) ? [found] : [])\n      : Array.prototype.slice.call(/^\\.([\\w-]+)$/.test(selector)\n        ? document.getElementsByClassName(RegExp.$1)\n        : /^[\\w-]+$/.test(selector) ? document.getElementsByTagName(selector)\n          : document.querySelectorAll(selector)\n      )\n  })()\n  return dom\n}\n\nexport {\n  getTarget,\n  merge,\n  isObject\n}\n","/**\r\n * Created by FDD on 2017/5/30.\r\n * @desc 坐标系统\r\n */\r\n\r\nimport echarts from 'echarts'\r\nimport ol from 'openlayers'\r\n\r\nconst _getCoordinateSystem = function (map, options = {}) {\r\n  const RegisterCoordinateSystem = function () {\r\n    this._mapOffset = [0, 0]\r\n    this.dimensions = ['lng', 'lat']\r\n    this.projCode_ = this._getProjectionCode()\r\n  }\r\n\r\n  RegisterCoordinateSystem.prototype.dimensions = ['lng', 'lat']\r\n\r\n  RegisterCoordinateSystem.dimensions = RegisterCoordinateSystem.prototype.dimensions\r\n\r\n  /**\r\n   * 设置地图窗口的偏移\r\n   * @param mapOffset\r\n   */\r\n  RegisterCoordinateSystem.prototype.setMapOffset = function (mapOffset) {\r\n    this._mapOffset = mapOffset\r\n  }\r\n\r\n  /**\r\n   * 跟据坐标转换成屏幕像素\r\n   * @param coords\r\n   * @returns {ol.Pixel}\r\n   */\r\n  RegisterCoordinateSystem.prototype.dataToPoint = function (coords) {\r\n    if (coords && Array.isArray(coords) && coords.length > 0) {\r\n      coords = coords.map(function (item) {\r\n        if (typeof item === 'string') {\r\n          item = Number(item)\r\n        }\r\n        return item\r\n      })\r\n    }\r\n    let source = options['source'] || 'EPSG:4326'\r\n    let destination = options['destination'] || this.projCode_\r\n    let pixel = map.getPixelFromCoordinate(ol.proj.transform(coords, source, destination))\r\n    const mapOffset = this._mapOffset\r\n    return [pixel[0] - mapOffset[0], pixel[1] - mapOffset[1]]\r\n  }\r\n\r\n  /**\r\n   * 获取地图视图投影\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  RegisterCoordinateSystem.prototype._getProjectionCode = function () {\r\n    let code = ''\r\n    if (map) {\r\n      code = map.getView() && map.getView().getProjection().getCode()\r\n    } else {\r\n      code = 'EPSG:3857'\r\n    }\r\n    return code\r\n  }\r\n\r\n  /**\r\n   * 跟据屏幕像素转换成坐标\r\n   * @param pixel\r\n   * @returns {ol.Coordinate}\r\n   */\r\n  RegisterCoordinateSystem.prototype.pointToData = function (pixel) {\r\n    const mapOffset = this._mapOffset\r\n    return map.getCoordinateFromPixel([pixel[0] + mapOffset[0], pixel[1] + mapOffset[1]])\r\n  }\r\n\r\n  /**\r\n   * 获取视图矩形范围\r\n   * @returns {*}\r\n   */\r\n  RegisterCoordinateSystem.prototype.getViewRect = function () {\r\n    const size = map.getSize()\r\n    return new echarts.graphic.BoundingRect(0, 0, size[0], size[1])\r\n  }\r\n\r\n  /**\r\n   * 移动转换\r\n   */\r\n  RegisterCoordinateSystem.prototype.getRoamTransform = function () {\r\n    return echarts.matrix.create()\r\n  }\r\n\r\n  /**\r\n   * get dimensions info\r\n   * @returns {Array|[string,string]}\r\n   */\r\n  RegisterCoordinateSystem.getDimensionsInfo = function () {\r\n    return RegisterCoordinateSystem.dimensions\r\n  }\r\n\r\n  /**\r\n   * 注册实例\r\n   * @param echartModel\r\n   */\r\n  RegisterCoordinateSystem.create = function (echartModel) {\r\n    echartModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.get('coordinateSystem') === 'openlayers') {\r\n        seriesModel.coordinateSystem = new RegisterCoordinateSystem(map)\r\n      }\r\n    })\r\n  }\r\n\r\n  return RegisterCoordinateSystem\r\n}\r\n\r\nexport default _getCoordinateSystem\r\n","import ol from 'openlayers'\nimport echarts from 'echarts'\nimport { getTarget, merge, isObject } from './helper'\nimport _getCoordinateSystem from './RegisterCoordinateSystem'\n// FIXME dom重绘时多次创建，地图相关事件的polyfill（事件触发的开始结束），参数定义（包含重绘，动画等）\nconst _options = {\n  'hideOnZooming': false,\n  'hideOnMoving': false,\n  'hideOnRotating': false\n}\n\nclass ol3Echarts {\n  static getTarget = getTarget\n  static merge = merge\n  constructor (chartOptions, options = {}, map) {\n    /**\n     * layer options\n     * @type {{}}\n     */\n    this.$options = Object.assign({}, _options, options)\n\n    /**\n     * chart options\n     */\n    this.$chartOptions = chartOptions\n\n    /**\n     * chart instance\n     * @type {null}\n     */\n    this.$chart = null\n\n    /**\n     * map\n     * @type {null}\n     */\n    this.$Map = null\n\n    /**\n     * Whether the relevant configuration has been registered\n     * @type {boolean}\n     * @private\n     */\n    this._isRegistered = false\n\n    if (map) this.appendTo(map)\n  }\n\n  /**\n   * append layer to map\n   * @param map\n   */\n  appendTo (map) {\n    if (map && map instanceof ol.Map) {\n      this.$Map = map\n      this.$Map.once('postrender', this.render, this)\n      this.$Map.renderSync()\n      this._unRegisterEvents()\n      this._registerEvents()\n    } else {\n      throw new Error('not map object')\n    }\n  }\n\n  /**\n   * get echarts options\n   * @returns {*}\n   */\n  getChartOptions () {\n    return this.$chartOptions\n  }\n\n  /**\n   * set echarts options and reRender\n   * @param options\n   * @returns {ol3Echarts}\n   */\n  setChartOptions (options = {}) {\n    this.$chartOptions = options\n    this.$Map.once('postrender', this.render, this)\n    this.$Map.renderSync()\n    return this\n  }\n\n  /**\n   * get map\n   * @returns {null}\n   */\n  getMap () {\n    return this.$Map\n  }\n\n  /**\n   * is visible\n   * @returns {Element|*|boolean}\n   * @private\n   */\n  _isVisible () {\n    return this.$container && this.$container.style.display === ''\n  }\n\n  /**\n   * show layer\n   */\n  show () {\n    if (this.$container) {\n      this.$container.style.display = ''\n    }\n  }\n\n  /**\n   * hide layer\n   */\n  hide () {\n    if (this.$container) {\n      this.$container.style.display = 'none'\n    }\n  }\n\n  /**\n   * remove layer\n   */\n  remove () {\n    this.$chart.clear()\n    this.$chart.dispose()\n    this._unRegisterEvents()\n    delete this.$chart\n    delete this.$Map\n    this.$container.parentNode.removeChild(this.$container)\n  }\n\n  /**\n   * clear chart\n   */\n  clear () {\n    this.$chart.clear()\n  }\n\n  /**\n   * show loading bar\n   */\n  showLoading () {\n    if (this.$chart) {\n      this.$chart.showLoading()\n    }\n  }\n\n  /**\n   * hide loading bar\n   */\n  hideLoading () {\n    if (this.$chart) {\n      this.$chart.hideLoading()\n    }\n  }\n\n  /**\n   * creat eclayer container\n   * @param map\n   * @param options\n   * @private\n   */\n  _createLayerContainer (map, options) {\n    const container = this.$container = document.createElement('div')\n    container.style.position = 'absolute'\n    container.style.top = 0\n    container.style.left = 0\n    container.style.right = 0\n    container.style.buttom = 0\n    let _target = getTarget(options['target'])\n    if (_target && _target[0] && _target[0] instanceof Element) {\n      _target[0].appendChild(container)\n    } else {\n      let _target = getTarget('.ol-overlaycontainer')\n      if (_target && _target[0] && _target[0] instanceof Element) {\n        _target[0].appendChild(container)\n      } else {\n        map.getViewport().appendChild(container)\n      }\n    }\n  }\n\n  /**\n   * Reset the container size\n   * @private\n   */\n  _resizeContainer () {\n    const size = this.getMap().getSize()\n    this.$container.style.height = size[1] + 'px'\n    this.$container.style.width = size[0] + 'px'\n  }\n\n  /**\n   * clear chart and redraw\n   * @private\n   */\n  _clearAndRedraw () {\n    if (!this.$chart || (this.$container && this.$container.style.display === 'none')) {\n      return\n    }\n    this.$chart.clear()\n    this.$chart.resize()\n    if (this.$chartOptions) {\n      this._registerMap()\n      this.$chart.setOption(this.$chartOptions, false)\n    }\n  }\n\n  /**\n   * handle map resize\n   */\n  onResize () {\n    this._resizeContainer()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle zoom end events\n   */\n  onZoomEnd () {\n    // if (!this.$options['hideOnZooming']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle rotate end events\n   */\n  onDragRotateEnd () {\n    // if (!this.$options['hideOnRotating']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle move start events\n   */\n  onMoveStart () {\n    if (!this.$options['hideOnMoving']) {\n      return\n    }\n    this.hide()\n  }\n\n  /**\n   * handle move end events\n   */\n  onMoveEnd () {\n    // if (!this.$options['hideOnMoving']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * register events\n   * @private\n   */\n  _registerEvents () {\n    const Map = this.$Map\n    // const view = Map.getView()\n    Map.on('precompose', this.onMoveEnd, this)\n    Map.on('change:size', this.onResize, this)\n    // view.on('change:resolution', this.onZoomEnd, this)\n    // view.on('change:center', this.onMoveEnd, this)\n    // view.on('change:rotation', this.onDragRotateEnd, this)\n    // Map.on('movestart', this.onMoveStart, this)\n    // Map.on('moveend', this.onMoveEnd, this)\n  }\n\n  /**\n   * un register events\n   * @private\n   */\n  _unRegisterEvents () {\n    const Map = this.$Map\n    // const view = Map.getView()\n    Map.un('change:size', this.onResize, this)\n    Map.un('precompose', this.onMoveEnd, this)\n    // view.un('change:resolution', this.onZoomEnd, this)\n    // view.un('change:center', this.onMoveEnd, this)\n    // view.un('change:rotation', this.onDragRotateEnd, this)\n    // Map.un('movestart', this.onMoveStart, this)\n    // Map.un('moveend', this.onMoveEnd, this)\n  }\n\n  /**\n   * register map coordinate system\n   * @private\n   */\n  _registerMap () {\n    if (!this._isRegistered) {\n      echarts.registerCoordinateSystem('openlayers', _getCoordinateSystem(this.getMap(), this.$options))\n      this._isRegistered = true\n    }\n    const series = this.$chartOptions.series\n    if (series && isObject(series)) {\n      for (let i = series.length - 1; i >= 0; i--) {\n        series[i]['coordinateSystem'] = 'openlayers'\n        series[i]['animation'] = false\n      }\n    }\n  }\n\n  /**\n   * render\n   */\n  render () {\n    if (!this.$container) {\n      this._createLayerContainer(this.$Map, this.$options)\n      this._resizeContainer()\n    }\n    if (!this.$chart) {\n      this.$chart = echarts.init(this.$container)\n      if (this.$chartOptions) {\n        this._registerMap()\n        this.$chart.setOption(this.$chartOptions, false)\n      }\n    } else if (this._isVisible()) {\n      this.$chart.resize()\n    }\n  }\n}\nexport default ol3Echarts\n"],"names":["isObject","type","value","merge","a","b","key","hasOwnProperty","getTarget","selector","dom","found","document","test","getElementById","RegExp","$1","Array","prototype","slice","call","getElementsByClassName","getElementsByTagName","querySelectorAll","_getCoordinateSystem","map","options","RegisterCoordinateSystem","_mapOffset","dimensions","projCode_","_getProjectionCode","setMapOffset","mapOffset","dataToPoint","coords","isArray","length","item","Number","source","destination","pixel","getPixelFromCoordinate","ol","proj","transform","code","getView","getProjection","getCode","pointToData","getCoordinateFromPixel","getViewRect","size","getSize","echarts","graphic","BoundingRect","getRoamTransform","matrix","create","getDimensionsInfo","echartModel","eachSeries","seriesModel","get","coordinateSystem","_options","ol3Echarts","chartOptions","$options","Object","assign","$chartOptions","$chart","$Map","_isRegistered","appendTo","Map","once","render","renderSync","_unRegisterEvents","_registerEvents","Error","getChartOptions","setChartOptions","getMap","_isVisible","$container","style","display","show","hide","remove","clear","dispose","parentNode","removeChild","showLoading","hideLoading","_createLayerContainer","container","createElement","position","top","left","right","buttom","_target","Element","appendChild","getViewport","_resizeContainer","height","width","_clearAndRedraw","resize","_registerMap","setOption","onResize","onZoomEnd","onDragRotateEnd","onMoveStart","onMoveEnd","on","un","registerCoordinateSystem","series","i","init"],"mappings":"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"}