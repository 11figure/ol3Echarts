{"version":3,"file":"ol3Echarts.js","sources":["../src/helper.js","../src/RegisterCoordinateSystem.js","../src/index.js"],"sourcesContent":["/**\n * Created by FDD on 2017/11/28.\n * @desc helper\n */\n\n/**\n * 判断是否为对象\n * @param value\n * @returns {boolean}\n */\nconst isObject = value => {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\n/**\n * merge\n * @param a\n * @param b\n * @returns {*}\n */\nconst merge = (a, b) => {\n  for (let key in b) {\n    /* istanbul ignore else */\n    if (!a.hasOwnProperty(key)) {\n      a[key] = b[key]\n    } else if (isObject(b[key]) && isObject(a[key])) {\n      merge(a[key], b[key])\n    }\n  }\n  return a\n}\n\n/**\n * get parent container\n * @param selector\n */\nconst getTarget = (selector) => {\n  let dom = (function () {\n    let found\n    return (document && /^#([\\w-]+)$/.test(selector))\n      ? ((found = document.getElementById(RegExp.$1)) ? [found] : [])\n      : Array.prototype.slice.call(/^\\.([\\w-]+)$/.test(selector)\n        ? document.getElementsByClassName(RegExp.$1)\n        : /^[\\w-]+$/.test(selector) ? document.getElementsByTagName(selector)\n          : document.querySelectorAll(selector)\n      )\n  })()\n  return dom\n}\n\nexport {\n  getTarget,\n  merge\n}\n","/**\n * Created by FDD on 2017/5/30.\n * @desc 坐标系统\n */\n\nimport echarts from 'echarts'\nimport ol from 'openlayers'\n\nconst _getCoordinateSystem = function (map, options) {\n  const RegisterCoordinateSystem = function () {\n    this.$options = options\n    this.$Map = map\n    this._mapOffset = [0, 0]\n    this.dimensions = ['lng', 'lat']\n    this.projCode_ = this._getProjectionCode()\n  }\n\n  /**\n   * 设置地图窗口的偏移\n   * @param mapOffset\n   */\n  RegisterCoordinateSystem.prototype.setMapOffset = function (mapOffset) {\n    this._mapOffset = mapOffset\n  }\n\n  /**\n   * 跟据坐标转换成屏幕像素\n   * @param coords\n   * @returns {ol.Pixel}\n   */\n  RegisterCoordinateSystem.prototype.dataToPoint = function (coords) {\n    if (coords && Array.isArray(coords) && coords.length > 0) {\n      coords = coords.map(function (item) {\n        if (typeof item === 'string') {\n          item = Number(item)\n        }\n        return item\n      })\n    }\n    let source = this.$options['source'] || 'EPSG:4326'\n    let destination = this.$options['destination'] || this.projCode_\n    return this.$Map.getPixelFromCoordinate(ol.proj.transform(coords, source, destination))\n  }\n\n  /**\n   * 获取地图视图投影\n   * @returns {string}\n   * @private\n   */\n  RegisterCoordinateSystem.prototype._getProjectionCode = function () {\n    let code = ''\n    if (this.$Map) {\n      code = this.$Map.getView() && this.$Map.getView().getProjection().getCode()\n    } else {\n      code = 'EPSG:3857'\n    }\n    return code\n  }\n\n  /**\n   * 跟据屏幕像素转换成坐标\n   * @param pixel\n   * @returns {ol.Coordinate}\n   */\n  RegisterCoordinateSystem.prototype.pointToData = function (pixel) {\n    return this.$Map.getCoordinateFromPixel(pixel)\n  }\n\n  /**\n   * 获取视图矩形范围\n   * @returns {*}\n   */\n  RegisterCoordinateSystem.prototype.getViewRect = function () {\n    const size = this.$Map.getSize()\n    return new echarts.graphic.BoundingRect(0, 0, size[0], size[1])\n  }\n\n  /**\n   * 移动转换\n   */\n  RegisterCoordinateSystem.prototype.getRoamTransform = function () {\n    return echarts.matrix.create()\n  }\n\n  RegisterCoordinateSystem.dimensions = ['lng', 'lat']\n\n  /**\n   * get dimensions info\n   * @returns {Array|[string,string]}\n   */\n  RegisterCoordinateSystem.getDimensionsInfo = function () {\n    return RegisterCoordinateSystem.dimensions\n  }\n\n  /**\n   * 注册实例\n   * @param echartModel\n   */\n  RegisterCoordinateSystem.create = function (echartModel) {\n    const that = this\n    echartModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'openlayers') {\n        seriesModel.coordinateSystem = new RegisterCoordinateSystem(that.$Map)\n      }\n    })\n  }\n\n  return RegisterCoordinateSystem\n}\n\nexport default _getCoordinateSystem\n","import ol from 'openlayers'\nimport echarts from 'echarts'\nimport { getTarget, merge } from './helper'\nimport _getCoordinateSystem from './RegisterCoordinateSystem'\n\nconst _options = {\n  'hideOnZooming': false,\n  'hideOnMoving': false,\n  'hideOnRotating': false\n}\n\nclass ol3Echarts {\n  static getTarget = getTarget\n  static merge = merge\n  constructor (chartOptions, options = {}) {\n    /**\n     * layer options\n     * @type {{}}\n     */\n    this.$options = Object.assign({}, _options, options)\n\n    /**\n     * chart options\n     */\n    this.$chartOptions = chartOptions\n\n    /**\n     * chart instance\n     * @type {null}\n     */\n    this.$chart = null\n\n    /**\n     * map\n     * @type {null}\n     */\n    this.$Map = null\n\n    /**\n     * Whether the relevant configuration has been registered\n     * @type {boolean}\n     * @private\n     */\n    this._isRegistered = false\n  }\n\n  /**\n   * append layer to map\n   * @param map\n   */\n  appendTo (map) {\n    if (map && map instanceof ol.Map) {\n      this.$Map = map\n      this.render()\n      this._unRegisterEvents()\n      this._registerEvents()\n    } else {\n      throw new Error('not map object')\n    }\n  }\n\n  /**\n   * get echarts options\n   * @returns {*}\n   */\n  getChartOptions () {\n    return this.$chartOptions\n  }\n\n  /**\n   * set echarts options and reRender\n   * @param options\n   * @returns {EchartsLayer}\n   */\n  setChartOptions (options = {}) {\n    this.$chartOptions = options\n    this._clearAndRedraw()\n    return this\n  }\n\n  /**\n   * get map\n   * @returns {null}\n   */\n  getMap () {\n    return this.$Map\n  }\n\n  /**\n   * is visible\n   * @returns {Element|*|boolean}\n   * @private\n   */\n  _isVisible () {\n    return this.$container && this.$container.style.display === ''\n  }\n\n  /**\n   * show layer\n   */\n  show () {\n    if (this.$container) {\n      this.$container.style.display = ''\n    }\n  }\n\n  /**\n   * hide layer\n   */\n  hide () {\n    if (this.$container) {\n      this.$container.style.display = 'none'\n    }\n  }\n\n  /**\n   * remove layer\n   */\n  remove () {\n    this.$chart.clear()\n    this.$chart.dispose()\n    this._unRegisterEvents()\n    delete this.$chart\n    delete this.$Map\n    this.$container.parentNode.removeChild(this.$container)\n  }\n\n  /**\n   * clear chart\n   */\n  clear () {\n    this.$chart.clear()\n  }\n\n  /**\n   * creat eclayer container\n   * @param map\n   * @param options\n   * @private\n   */\n  _createLayerContainer (map, options) {\n    const container = this.$container = document.createElement('div')\n    container.style.position = 'absolute'\n    container.style.top = 0\n    container.style.left = 0\n    container.style.right = 0\n    container.style.buttom = 0\n    let _target = getTarget(options['target'])\n    if (_target && _target[0] && _target[0] instanceof Element) {\n      _target[0].appendChild(container)\n    } else {\n      map.getViewport().appendChild(container)\n    }\n  }\n\n  /**\n   * Reset the container size\n   * @private\n   */\n  _resizeContainer () {\n    const size = this.getMap().getSize()\n    this.$container.style.height = size[1] + 'px'\n    this.$container.style.width = size[0] + 'px'\n  }\n\n  /**\n   * clear chart and redraw\n   * @private\n   */\n  _clearAndRedraw () {\n    if (this.$container && this.$container.style.display === 'none') {\n      return\n    }\n    this.$chart.clear()\n    this.$chart.resize()\n    if (this.$chartOptions) {\n      this._registerMap()\n      this.$chart.setOption(this.$chartOptions, false)\n    }\n  }\n\n  /**\n   * handle map resize\n   */\n  onResize () {\n    this._resizeContainer()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle zoom end events\n   */\n  onZoomEnd () {\n    // if (!this.$options['hideOnZooming']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle rotate end events\n   */\n  onDragRotateEnd () {\n    // if (!this.$options['hideOnRotating']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * handle move start events\n   */\n  onMoveStart () {\n    if (!this.$options['hideOnMoving']) {\n      return\n    }\n    this.hide()\n  }\n\n  /**\n   * handle move end events\n   */\n  onMoveEnd () {\n    // if (!this.$options['hideOnMoving']) {\n    //   return\n    // }\n    this.show()\n    this._clearAndRedraw()\n  }\n\n  /**\n   * register events\n   * @private\n   */\n  _registerEvents () {\n    const Map = this.$Map\n    const view = Map.getView()\n    Map.on('change:size', this.onResize, this)\n    view.on('change:resolution', this.onZoomEnd, this)\n    view.on('change:center', this.onMoveEnd, this)\n    view.on('change:rotation', this.onDragRotateEnd, this)\n    Map.on('movestart', this.onMoveStart, this)\n    Map.on('moveend', this.onMoveEnd, this)\n  }\n\n  /**\n   * un register events\n   * @private\n   */\n  _unRegisterEvents () {\n    const Map = this.$Map\n    const view = Map.getView()\n    Map.un('change:size', this.onResize, this)\n    view.un('change:resolution', this.onZoomEnd, this)\n    view.un('change:center', this.onMoveEnd, this)\n    view.un('change:rotation', this.onDragRotateEnd, this)\n    Map.un('movestart', this.onMoveStart, this)\n    Map.un('moveend', this.onMoveEnd, this)\n  }\n\n  /**\n   * register map coordinate system\n   * @private\n   */\n  _registerMap () {\n    if (!this._isRegistered) {\n      echarts.registerCoordinateSystem('openlayers', _getCoordinateSystem(this.getMap(), this.$options))\n      this._isRegistered = true\n    }\n    const series = this.$chartOptions.series\n    if (series) {\n      for (let i = series.length - 1; i >= 0; i--) {\n        series[i]['coordinateSystem'] = 'openlayers'\n        series[i]['animation'] = false\n      }\n    }\n  }\n\n  /**\n   * render\n   */\n  render () {\n    if (!this.$container) {\n      this._createLayerContainer(this.$Map, this.$options)\n      this._resizeContainer()\n    }\n    if (!this.$chart) {\n      this.$chart = echarts.init(this.$container)\n      if (this.$chartOptions) {\n        this._registerMap()\n        this.$chart.setOption(this.$chartOptions, false)\n      }\n    } else if (this._isVisible()) {\n      this.$chart.resize()\n    }\n  }\n}\nexport default ol3Echarts\n"],"names":["isObject","type","value","merge","a","b","key","hasOwnProperty","getTarget","selector","dom","found","document","test","getElementById","RegExp","$1","Array","prototype","slice","call","getElementsByClassName","getElementsByTagName","querySelectorAll","_getCoordinateSystem","map","options","RegisterCoordinateSystem","$options","$Map","_mapOffset","dimensions","projCode_","_getProjectionCode","setMapOffset","mapOffset","dataToPoint","coords","isArray","length","item","Number","source","destination","getPixelFromCoordinate","ol","proj","transform","code","getView","getProjection","getCode","pointToData","pixel","getCoordinateFromPixel","getViewRect","size","getSize","echarts","graphic","BoundingRect","getRoamTransform","matrix","create","getDimensionsInfo","echartModel","that","eachSeries","seriesModel","get","coordinateSystem","_options","ol3Echarts","chartOptions","Object","assign","$chartOptions","$chart","_isRegistered","appendTo","Map","render","_unRegisterEvents","_registerEvents","Error","getChartOptions","setChartOptions","_clearAndRedraw","getMap","_isVisible","$container","style","display","show","hide","remove","clear","dispose","parentNode","removeChild","_createLayerContainer","container","createElement","position","top","left","right","buttom","_target","Element","appendChild","getViewport","_resizeContainer","height","width","resize","_registerMap","setOption","onResize","onZoomEnd","onDragRotateEnd","onMoveStart","onMoveEnd","view","on","un","registerCoordinateSystem","series","i","init"],"mappings":"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"}